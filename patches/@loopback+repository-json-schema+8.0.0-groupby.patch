diff --git a/node_modules/@loopback/repository-json-schema/dist/filter-json-schema.js b/node_modules/@loopback/repository-json-schema/dist/filter-json-schema.js
index 0752c13..ff281ea 100644
--- a/node_modules/@loopback/repository-json-schema/dist/filter-json-schema.js
+++ b/node_modules/@loopback/repository-json-schema/dist/filter-json-schema.js
@@ -74,6 +74,32 @@ function getFilterJsonSchemaFor(modelCtor, options = {}) {
             minimum: 1,
             examples: [100],
         },
+        sum: {
+            type: 'string',
+            examples: ['column1'],
+        },
+        min: {
+            type: 'string',
+            examples: ['column1'],
+        },
+        max: {
+            type: 'string',
+            examples: ['column1'],
+        },
+        avg: {
+            type: 'string',
+            examples: ['column1'],
+        },
+        count: {
+            type: 'string',
+            examples: ['column1'],
+        },
+        groupBy: {
+            type: 'array',
+            items: {
+              type: 'string',
+            },
+        },
         skip: {
             type: 'integer',
             minimum: 0,
@@ -98,6 +124,9 @@ function getFilterJsonSchemaFor(modelCtor, options = {}) {
     if (!excluded.includes('fields')) {
         properties.fields = getFieldsJsonSchemaFor(modelCtor, options);
     }
+    if (!excluded.includes('groupBy')) {
+        properties.fields = getGroupByJsonSchemaFor(modelCtor, options);
+      }
     // Remove excluded properties
     for (const p of excluded) {
         delete properties[p];
@@ -194,5 +223,31 @@ function getFieldsJsonSchemaFor(modelCtor, options = {}) {
     });
     return schema;
 }
+exports.getGroupByJsonSchemaFor = (modelCtor,options= {}) => {
+    const schema = {oneOf: []};
+    if (options.setTitle !== false) {
+        schema.title = `${modelCtor.modelName}.GroupBy`;
+    }
+    const properties = Object.keys(modelCtor.definition.properties);
+    const additionalProperties = modelCtor.definition.settings.strict === false;
+
+    schema.oneOf?.push({
+        type: 'object',
+        properties: properties.reduce((prev, crr) => ({...prev, [crr]: {type: 'boolean'}}),{}),
+        additionalProperties,
+    });
+
+  schema.oneOf?.push({
+    type: 'array',
+    items: {
+      type: 'string',
+      enum: properties.length && !additionalProperties ? properties : undefined,
+      examples: properties,
+    },
+    uniqueItems: true,
+  });
+
+  return schema;
+}
 exports.getFieldsJsonSchemaFor = getFieldsJsonSchemaFor;
 //# sourceMappingURL=filter-json-schema.js.map
\ No newline at end of file
